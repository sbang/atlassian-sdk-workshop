 -*- coding: utf-8 -*-
* Atlassian SDK workshop

Ideen med dette dokumentet er at det skal være lett å kopiere kodebiter over i IDEen og lett å klikke seg fram til dokumentasjon.
** Laste ned og installere Atlassian SDK
*** Kan ha det liggende på Dropbox evt. på en minnepinne
** Starte opp Jira standalone
 - Åpne et cmd.exe og starte:
   : atlas-run-standalone --product jira
   - Slett eventuelt først katalogen som atlas-run-standalone bruker:
     : %USERPROFILE%\amps-standalone\target
** Logge inn og lag eksempelprosjekt og en sak i prosjektet
*** Åpne Jira i en nettleser
 - URL: http://localhost:2990/jira
 - Dersom Jira sier at URLen ikke matcher, klikk på banneret øverst for å endre navnet
*** Logg inn som admin/admin
*** Ta "Create project" og gi prosjektet navn
 - Velg "Simple Issue Tracking" som prosjekttype
   - "Simple Issue Tracking" krever ikke noen ekstra lisens
 - Gi prosjektet navn:
   : Eksempelprosjektet
*** Lag en sak, legg inn "Hei verden!" i Description-feltet
 - Klikk på knappen "Create" i den øverste raden (nær midten, lengs til høyre av gruppen som starter i venstre kant av siden)
 - I dialogen "Create Issue":
   - I feltet "Summary", skriv:
     : Vi må kunne vise issue-beskrivelser i Confluence
   - I feltet "Description" (litt nede i dialogen), skriv:
     : Når du kan lese denne teksten i Confluence er vi ferdige! Gratulerer!
** Lag en Jira-plugin og start Jira
 - Start cmd.exe
 - cd til egnet sted, f.eks.
   : mdkir %USERPROFILE%\fagdag
   : cd %USERPROFILE%\fagdag
** Lag en confluence-plugin:
 : atlas-create-confluence-plugin --group-id no.steria.confluence --artifact-id sdkintro --version 1.0 --package no.steria.jira.confluence.plugins.sdkintro --non-interactive
 - /Merk:/ Alle fire argumenter (gruppe, artifact, versjon og pakke) må være på plass for at =--non-interactive= skal fungere
** Sett opp IDEen på plugin'en
*** Åpne Confluence-plugin'en i eclipse
 - Åpne eclipse på et nytt workspace:
   - I Dialogen "Workspace Launcher":
     - Klikk på knappen "Browse"
     - I dialogen "Select Workspace Directory":
       - I "Folder", skriv
         : %USERPROFILE%\fagdag
       - Klikk på knappen "OK"
     - Klikk på knappen "OK"
 - Installér m2e
 - Legg til Atlassian SDK i i m2e:
   - Velg Window->Preferences
   - I "Preferences"-dialogen:
     - Velg Maven->Installations
     - Klikk på "Add..."
     - "Maven Installation"-dialogen:
       - Legg inn i Folder-feltet:
         : %USERPROFILE%\atlassian-plugin-sdk\apache-maven-3.2.1
       - Klikk på knappen "OK"
     - Klikk på knappen "OK"
 - Importer prosjektet i eclipse
   - Høyreklikk "Package Explorer" og velg: Import...
   - I dialogen "Import"
   - Velg Maven->Existing maven project
   - Klikk på knappen "Next>"
   - Klikk på knappen "Browse..."
   - I dialogen "Select Root Folder"
     - Velg mappen "fagdag"
     - Klikk på knappen "OK"
   - Klikk på knappen "Next>"
   - Klikk på knappen "Finish"
   - I dialogen "Incomplete Maven Goal Execution"
     - Klikk på knappen "OK"
       - (Byggefeilene tar vi i neste steg)
 - Fiks byggefeil i eclipse:
   - Høyreklikk første feil og velg: Quick Fix
   - I "Quick fix"-dialogen:
     - I "Select av fix", velg: Permanently mark goal compress-resources in pom.xml as ignored in eclipse build
     - Klikk på knappen "Finish"
   - Høyreklikk første feil og velg: Quick Fix
   - I "Quick fix"-dialogen:
     - I "Select av fix", velg: Permanently mark goal compress-resources in pom.xml as ignored in eclipse build
     - I "Problems" klikk på knappen "Select All"
     - Klikk på knappen "Finish"
     - I dialogen "Ignore"
       - Klikk på knappen "OK"
   - Høyreklikk prosjektet "sdkintro" i "Package Explorer" og velg: Maven->Update Project...
   - I dialogen "Update Maven Project"
     - Klikk på knappen "OK"
*** Åpne Confluence-plugin'en i IntelliJ
** Starte med atlas-debug
 - Først start et cmd.exe og ta:
   : cd %USERPROFILE%\fagdag\sdkintro
   : atlas-debug
 - Vent til det kommer en utskrift ala dette:
   : [INFO] confluence started successfully in 220s at http://NOLSBANG02:1990/confluence
   : [INFO] Type Ctrl-D to shutdown gracefully
   : [INFO] Type Ctrl-C to exit
 - Åpne en nettleserfane på http://localhost:1990/confluence
   - Logg inn med brukernavn
     : admin
     og passord
     : admin
 - Lag en side
   - Klikk på knappen "Create" (øverst på sida, litt til venstre for midten)
   - Velg "Blank page" og klikk på knappen "Create"
   - I tittelfeltet gi en tittel. f.eks.:
     : Min testside
   - Velg: +Insert->Other Macros
   - I dialogen "Select Macro":
     - I tekstboksen oppe til høyre (til venstre for hyperlenken "Help"), skriv inn:
       : hello
     - Observer at man ikke får noen treff
** Lag en makro i plugin'en
 - Åpne eclipse på workspace't:
   : %USERHOME%\fagdag
 - Lag en ny pakke:
   - Åpne mappen =src/main/java=
   - Høyreklikk pakken som allerede ligger der og ta: New->Package
   - I dialogen "New Java Package":
     - I "Name", legg inn:
       : no.steria.jira.confluence.plugins.sdkintro.macro
     - Klikk på knappen "Finish"
 - Lag en makro i pakken =no.steria.jira.confluence.plugins.sdkintro.macro=
   - Lag en ny klasse som implementerer interface't [[https://docs.atlassian.com/confluence/latest/com/atlassian/confluence/macro/Macro.html][Macro]]:
     - Høyreklikk =no.steria.jira.confluence.plugins.sdkintro.macro= og ta New->Class
     - I dialogen "New Java Class":
       - I "Name", skriv:
         : HelloJiraIssueMacro
       - Klikk på knappen "Add..." ved "Interfaces"
       - I dialogen "Implemented Interfaces Selection":
         - I "Choose interfaces", skriv:
           : macro
         - I "Matching items", velg:
           : Macro - com.atlassian.confluence.macro
           (antagelig førstevalget)
         - Klikk på knappen "OK"
       - Klikk på knappen "Finish"
   - Følgende kode blir generert:
     #+BEGIN_SRC java
       package no.steria.jira.confluence.plugins.sdkintro.macro;

       import java.util.Map;

       import com.atlassian.confluence.content.render.xhtml.ConversionContext;
       import com.atlassian.confluence.macro.Macro;
       import com.atlassian.confluence.macro.MacroExecutionException;

       public class HelloJiraIssueMacro implements Macro {

               @Override
               public String execute(Map<String, String> arg0, String arg1,
                               ConversionContext arg2) throws MacroExecutionException {
                       // TODO Auto-generated method stub
                       return null;
               }

               @Override
               public BodyType getBodyType() {
                       // TODO Auto-generated method stub
                       return null;
               }

               @Override
               public OutputType getOutputType() {
                       // TODO Auto-generated method stub
                       return null;
               }

       }
     #+END_SRC
   - Fiks =execute()=, argumentene (sånn at de blir de samme som i [[https://docs.atlassian.com/confluence/latest/com/atlassian/confluence/macro/Macro.html#execute(java.util.Map, java.lang.String, com.atlassian.confluence.content.render.xhtml.ConversionContext)][Macro.execute()]])
     #+BEGIN_SRC java
       @Override
       public String execute(Map<String, String> parameters, String body, ConversionContext context) throws MacroExecutionException {
               // TODO Auto-generated method stub
               return null;
       }
     #+END_SRC
   - Fyll inn innhold i metodene:
     #+BEGIN_SRC java
       @Override
       public String execute(Map<String, String> parameters, String body, ConversionContext context) throws MacroExecutionException {
               return "<b>HelloJiraIssue macro is here!</b>";
       }

       @Override
       public BodyType getBodyType() {
               return BodyType.NONE;
       }

       @Override
       public OutputType getOutputType() {
               return OutputType.BLOCK;
       }
     #+END_SRC
 - Legg inn klassen i plugin-konfigurasjonen:
   - Åpne mappen =src/main/resources=
   - Åpne fila =atlassian-plugin.xml=
   - Legg inn følgende XML-kode i =atlassian-plugin.xml= (rett under topp-elementet =<atlassian-plugin>=)
     #+BEGIN_SRC nxml
       <xhtml-macro name="hello-jira-issue-macro" class="no.steria.jira.confluence.plugins.sdkintro.macros.HelloJiraIssueMacro" key="hello-jira-issue-macro">
           <parameters/>
       </xhtml-macro>
     #+END_SRC
 - Start et cmd.exe og ta:
   : cd %USERPROFILE%\fagdag\sdkintro
   : atlas-cli
 - Når det kommer en prompt =maven>= så gi følgende kommando (fulgt av RET):
   : pi
 - Sjekk at makroen er på plass:
   - Gå til Confluence i en nettleser (http://localhost:1990/confluence ) og ta Edit på sida du lagde tidligere ("Min testside")
   - Velg: +Insert->Other Macros
   - I dialogen "Select Macro":
     - I tekstboksen oppe til høyre (til venstre for hyperlenken "Help"), skriv inn:
       : hello
     - Observer at makroen "Hello jira issue" dukker opp, og velg denne
     - Klikk på knappen "Insert"
   - Klikk på knappen "Save" (nederst i side-editoren)
 - Siden har nå teksten "HelloJiraIssue macro" i uthevet skrift
** Legg på "issue key" som en parameter til makroen
 - Sjekk at makroen ikke har noen parameter:
   - Gå til Confluence i en nettleser (http://localhost:1990/confluence ) og ta Edit på sida du lagde tidligere ("Min testside")
     - Klikk på "Edit" (oppe til høyre på siden, samme rad som "Tools"
     - Klikk på "Hello jira issue macro" og velg "Edit"
     - "Preview" viser teksten "HelloJiraIssue macro is here"
     - Ingen parametere vises
   - Velg: +Insert->Other Macros
   - I dialogen "Select Macro":
     - I tekstboksen oppe til høyre (til venstre for hyperlenken "Help"), skriv inn:
       : hello
     - Observer at makroen "Hello jira issue" dukker opp, og velg denne
     - Klikk på knappen "Insert"
   - Klikk på knappen "Save" (nederst i side-editoren)
 - Legg inn parameteren i plugin-konfigurasjonen:
   - Åpne mappen =src/main/resources=
   - Åpne fila =atlassian-plugin.xml=
   - Endre <xhtml-macro>-elementet i =atlassian-plugin.xml= slik:
     #+BEGIN_SRC nxml
       <xhtml-macro name="hello-jira-issue-macro" class="no.steria.jira.confluence.plugins.sdkintro.macros.HelloJiraIssueMacro" key="my-macro">
        <parameters>
         <parameter name="jiraIssueKey" type="string"/>
        </parameters>
       </xhtml-macro>
     #+END_SRC
 - I cmd.exe som kjører =atlas-cli=, gi kommandoen:
   : pi
 - Gå tilbake til fanen åpen mot Confluence (http://localhost:1990/confluence ) og sjekk makroen nå har en parameter:
   - Gå til "Min testside" åpen i side-editoren
   - Klikk på "Hello jira issue macro" og velg "Edit"
   - Makroen har nå en parameter jiraIssueKey
 - Endre =execute()=-metoden til HelloJiraIssueMacro, til at den blir slik:
   #+BEGIN_SRC java
     @Override
     public String execute(Map<String, String> parameters, String body, ConversionContext context) throws MacroExecutionException {
             String jiraIssueKey = parameters.get("jiraIssueKey");
             return "<b>HelloJiraIssue macro for issue: " + jiraIssueKey + "</b>";
     }
   #+END_SRC
 - Ta en reload på "Min testside" og observer at teksten i fet skrift er "Hello jira issue macro for:(null)"
** Debug inn i plugin'en
Ettersom vi startet "atlas-debug" på plugin-prosjektet istedenfor "atlas-run" så har vi en mulighet til å debugge direkte inn i plugin'en.
*** Med eclipse
 - Velg fra menyen Run->Debug Configurations...
 - I dialogen "Debug Configurations":
   - Velg "Remote Java Appliation"
   - Klikk på "new"-knappen (Et stående rektangel med gult plusstegn oppe til høyre)
   - I "Name", skriv:
     : sdkintro confluence
   - Klikk på knappen "Browse..." ved "Project"
   - I dialogen "Project Selection":
     - Velg prosjektet "sdkintro" (eneste prosjekt her)
     - Klikk på knappen "OK"
   - Under "Connection Properties":
     - For "Host", skriv:
       : localhost
     - For "Port", skriv:
       : 5005
   - Klikk på knappen "Debug"
 - I =HelloJiraIssueMacro.java=:
   - Sett breakpoint på første linje i =execute()=-metoden:
     #+BEGIN_SRC java
       String jiraIssueKey = parameters.get("jiraIssueKey");
     #+END_SRC
 - Ta en reload på "Min testside" i nettleseren
 - Godta bytte til "Debug perspective"
 - Debuggeren i eclipse stopper på første linje
 - Se på variable step litt og ta continue
 - I "Debug"-fanen:
   - Høyreklikk "sdkintro confluence" og velg Disconnect
 - Gå tilbake til Java perspective
*** Med IntelliJ
** Rapportere feil fra makroen
Ved å kaste en [[https://docs.atlassian.com/confluence/latest/com/atlassian/confluence/macro/MacroExecutionException.html][MacroExecutionException]] kan man både rapportere feil der makroen står på en Confluence-side og i loggen til Confluence.

 - Endre =execute()= i =HelloJiraIssueMacro til dette:
   #+BEGIN_SRC java
     @Override
     public String execute(Map<String, String> parameters, String body, ConversionContext context) throws MacroExecutionException {
             String jiraIssueKey = parameters.get("jiraIssueKey");
             if (null == jiraIssueKey) {
                     throw new MacroExecutionException("A jiraIssueKey referencing a valid Jira issue is required");
             }
             return "<b>HelloJiraIssue macro for:" + jiraIssueKey +"</b>";
     }
   #+END_SRC
 - Gå til cmd.exe som kjører =atlas-cli= og gi kommandoen:
   : pi
 - Ta en reload på "Min testside" og se at instedenfor "Hello jira issue macro for:(null)", står det nå "Error rendering macro 'hello-jira-issue-macro' : A jiraIssueKey referencing a valid Jira issue is required"
 - Gå til cmd.exe som kjører =atlas-debug= og se at man finner en slik linje (SDK Confluence logger til konsoll istedenfor til f.eks. catalina.out):
   : [INFO] [talledLocalContainer] 2015-01-14 12:49:10,731 WARN [http-1990-7] [xhtml.view.macro.ViewMacroMarshaller] marshalInternal Exception executing macro: hello-jira-issue-macro, with message: A jiraIssueKey referencing a valid Jira issue is required
   - SDK Jira logger til en fil
** Koble makroen mot Confluence
 - Vi skal bruke [[https://docs.atlassian.com/jira/REST/latest/#d2e4292][Jira REST API]]
 - Få inn en [[https://docs.atlassian.com/applinks-api/3.2/com/atlassian/applinks/api/EntityLinkService.html][EntityLinkService]] og bruke denne til å navigere til koblet Jira:
   - Legg til =org.json:json= som "provided" avhenghet, dvs.:
     #+BEGIN_SRC nxml
       <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20141113</version>
        <scope>provided</scope>
       </dependency>
     #+END_SRC
     - I Eclipse:
       - Åpne =pom.xml= i sdkintro-prosjeket
       - Velg fanen "Dependencies"
       - Klikk på knappen "Add..."
       - I dialogen "Select Dependency"
         - I "Enter groupId, artifactId or sha1 prefi or pattern(*)", skriv:
           : org.json
         - I "Search results":
           - velg "org.json json"
             - Mulig at du må scrolle nedover for å finne den
         - I "Scope", velg "provided"
         - Klikk på knappen "OK"
       - Lagre =pom.xml=
     - I IntelliJ:
       - TBD!
   - Legg til =EntityLinkService= som en komponentavhengighet:
     - Åpne =src/main/resoures=-mappen
     - Åpne =atlassian-plugin.xml=
     - Jeg inn følgende linje etter ekisterende <component-import>:
       #+BEGIN_SRC nxml
         <component-import key="entityLinkService" interface="com.atlassian.applinks.api.EntityLinkService" />
       #+END_SRC
   - Lag en konstruktør (og et felt) i HelloJiraIssueMacro, som ser sånn ut:
     #+BEGIN_SRC java
       private EntityLinkService entityLinkService;

       public HelloJiraIssueMacro(EntityLinkService entityLinkService) {
               this.entityLinkService = entityLinkService;
       }
     #+END_SRC
     Det vi gjør her, er å få en [[https://developer.atlassian.com/display/CONFDEV/Accessing+Confluence+Components+from+Plugin+Modules#AccessingConfluenceComponentsfromPluginModules-Constructor-basedinjection(v2plugins)][Spring dependency injection]] av [[https://docs.atlassian.com/applinks-api/3.2/com/atlassian/applinks/api/EntityLinkService.html][EntityLinkService]]
     
     EntityLinkService-objektet skal vi så bruke til å få kontakt med en Jira-instans.
   - Endre =execute()=-metoden til å se slik ut:
     #+BEGIN_SRC java
       @Override
       public String execute(Map<String, String> parameters, String body, ConversionContext context) throws MacroExecutionException {
               String jiraIssueKey = parameters.get("jiraIssueKey");
               if (null == jiraIssueKey) {
                       throw new MacroExecutionException("A jiraIssueKey referencing a valid Jira issue is required");
               }

               // Find the factory that creates requests
               Space currentSpaceForPageWithMacro = spaceManager.getSpace(context.getSpaceKey());
               EntityLink jiraProjectLink = entityLinkService.getPrimaryEntityLink(currentSpaceForPageWithMacro, JiraProjectEntityType.class);
               if (null == jiraProjectLink) {
                       throw new MacroExecutionException("No application link from the Confluence space \"" + currentSpaceForPageWithMacro.getName() + "\" to a Jira project!");
               }
               ApplicationLinkRequestFactory jiraRequestFactory = jiraProjectLink.getApplicationLink().createAuthenticatedRequestFactory();

               // Do a REST API call to fetch the data of the issue of the macro parameter
               String jiraIssueRESTEndpoint = "/rest/api/2/issue/" + jiraIssueKey;
               String jiraIssueJson = null;
               try {
                       ApplicationLinkRequest jiraIssueGetRequest = jiraRequestFactory.createRequest(MethodType.GET, jiraIssueRESTEndpoint);
                       jiraIssueJson = jiraIssueGetRequest.execute();
                       JSONObject jiraIssue = new JSONObject(jiraIssueJson);
                       JSONObject jiraIssueFields = jiraIssue.getJSONObject("fields");

                       String jiraIssueDescription = jiraIssueFields.getString("description");

                       return "<b>Description for issue " + jiraIssueKey + ":</b> " + jiraIssueDescription + "<br/>";
               } catch (CredentialsRequiredException e) {
                       // Re-throw as a MacroExecutionException, which is what Confluence expects.
                       throw new MacroExecutionException(e);
               } catch (ResponseException e) {
                       // Re-throw as a MacroExecutionException, which is what Confluence expects.
                       throw new MacroExecutionException(e);
               } catch (JSONException e) {
                       String msg = "Problems parsing response as JSON: " + e.getMessage() + "  received JSON: " + jiraIssueJson;
                       throw new MacroExecutionException(msg);
               }
       }
     #+END_SRC
 - Gå til cmd.exe som kjører =atlas-cli= og gi kommandoen:
   : pi
 - Ta en reload på "Min testside" og se at det fortsatt står "Error rendering macro 'hello-jira-issue-macro' : A jiraIssueKey referencing a valid Jira issue is required"
 - Klikk på "Edit" (oppe til høyre på "Min testside")
 - Klikk på "Hello jira issue macro" (grå boks) og velg "Edit"
 - I dialogen "Edit 'Hello jira issue macro' Macro":
   - i "jiraIssueKey", skriv:
     : EK-1
   - Klikk på knappen "Save"
 - Klikk på "Save" (nederst på sida i sideeditoren)
 - Merk at teksten i siden har endret seg, og at det nå står: "Error rendering macro 'hello-jira-issue-macro' : No application link from the Confluence space "Demonstration Space" to a Jira project!"
 - Så da må vi først koble sammen Confluence og Jira
   - I Confluence, åpne tannhjulsmenyen oppe til høyre og velg "General Configuration"
   - I siden som åpnes i nettleseren, skroll nederst på sida og velg "Application Links" fra lista i venstre kant (under "ADMINISTRATION")
   - I boksen med teksten "Enter the URL of the application you want to link", skriv:
     : http://localhost:2990/jira
   - Klikk på knappen "Create new link"
   - I dialogen "Link applications"
     - Kryss av "The server have the same set of users and usernames"
     - Klikk på knappen "Continue"
     - Klikk på knappen "Continue" en gang til
   - Klikk på "Edit" helt til høyre på linja som starter med "Your Company JIRA"
   - I dialogen "Configure Your Company JIRA":
     - Velg "Outgoing Authentication"
     - Velg fanen "Trusted Applications", skroll ned til bunnen og klikk på knappen "Enable"
     - Velg "Incoming Authentication"
     - Velg fanen "Trusted Applications", skroll ned til bunnen og klikk på knappen "Enable"
       - Dersom det kommer en feilmelding, bare klikk på URLen som vises
     - Klikk på "Close"
 - Når Confluence og Jira er koblet sammen, så må vi koble sammen Confluence-space't med et Jira-prosjekt
   - Velg fra menyen på toppen: Spaces->Demonstration Space
   - Velg "Space.tools->Integrations" fra dropdownmenyen nederst til venstre
   - Åpne "+ Add Link" (til høyre på siden), velg: Your Company JIRA (JIRA)
   - I dialogen "Enter link details":
     - Klikk på knappen "Create"
   - Klikk på "Pages" (oppe til venstre på siden)
   - Velg "Min testside", denne bør nå inneholde teksten "*Description for issue EK-1*: Når du kan lese denne teksten i Confluence er vi ferdige! Gratulerer!"

